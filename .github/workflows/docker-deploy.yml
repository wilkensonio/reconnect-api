name: FastAPI tests and Docker deploy

on:
  pull_request:
    types: [opened, reopened, synchronize] # Run on PR open, reopen, or sync
    branches:
      - main

permissions:
  contents: write
  actions: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: reconnect
          MYSQL_ROOT_PASSWORD: rootroot
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: set DATABASE_URL
        run: echo "DATABASE_URL=sqlite:///./test.db" > $GITHUB_ENV

      - name: Set up production database environment variables
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "LOCAL_DB_PASSWORD=rootroot" >> $GITHUB_ENV
          echo "LOCAL_DB_USER=root" >> $GITHUB_ENV
          echo "LOCAL_DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_USER=reconnect" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV 
          echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}" >> $GITHUB_ENV 
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> $GITHUB_ENV 
          echo "SENDER_EMAIL=${{ secrets.SENDER_EMAIL }}" >> $GITHUB_ENV 
          echo "SENDER_PASSWORD=${{ secrets.SENDER_PASSWORD }}" >> $GITHUB_ENV 
          echo "ROOT_PASSWORD=${{ secrets.ROOT_PASSWORD }}" >> $GITHUB_ENV 
          echo "ROOT_EMAIL=${{ secrets.ROOT_EMAIL }}" >> $GITHUB_ENV 
          echo "EXPRIRES_MINUTES=30" >> $GITHUB_ENV 
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> $GITHUB_ENV 
          echo "DB_NAME=reconnect" >> $GITHUB_ENV
          echo "DB_PORT=3306" >> $GITHUB_ENV

      - name: Run tests
        run: pytest tests

  build:
    runs-on: ubuntu-latest
    needs: test # Wait for the test job to complete.

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Authenticate with GitHub using PAT
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
